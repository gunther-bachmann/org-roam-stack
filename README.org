#+title: org-roam-stack

provides functions to keep org-roam notes visibly in a stack

* General ideas

  This package aims to keep all roam document buffers in a stack of windows. It provides functions to add (existing) roam documents to the
  stack, navigate, remove or reorder them. It provides functions to maximize or balance the stack windows.

  - stack :: ordered list of org roam documents visually organized from top to bottom

  [[file:org-roam-stack.screenshot.three-cards.png][Screenshot with three cards]]

* Installation

  Using [[https://github.com/jwiegley/use-package][use-package]], this example shows how easy it is to include org-roam-stack into your setup.
  #+begin_src emacs-lisp
    (when (file-exists-p "~/repo/org-roam-stack/org-roam-stack.el")
          (use-package org-roam-stack
            :load-path "~/repo/org-roam-stack/"
            :after (org org-roam)
            :custom
            (org-roam-stack--link-adjustments t)
            (org-roam-stack--open-ro t)))
  #+end_src

* Rationale

  Creating stacks is a method of eliciting, of discovering new information, new aspects of some existing concepts manifested in cards. The
  idea combines ideas stemming from the zettelkasten method as well as experiences in building /bildstapel/ (picture stacks) in the area of
  political iconography.

  A stack of cards provides an additional perspective that could result in a new concept, an additional card. The stack could be interpreted
  as an argument, each card adding a certain aspect to this argument. The facet each card adds is not explictly stated. However the order
  and selection of the cards should carry this information. A stack could be interpreted as instantiations of a concept. The concept is an
  emergent aspect of the stack.

  This package strives to support this process.

* open items
** TODO think about different visible window setups
   - currently the window setup strategy is keeping the stack in a left lane
   - this could also be changed to right, middle and multiple lanes
** TODO think about saving stack, visual stack setup, restore stack, relating stacks to cards, creating cards from stacks
   - stacks are regular org files
   - (re)order links in the stack corresponds to order on the stack and stays in sync
   - stacks are named (with default = stack-${hash})
   - stacks are saved/restored
   - stack files can be extended with regular org elements
   - stacks are part of org roam
   - there can be only one stack window open at a time (not part of the stack itself)
   - opening a stack should
     - put that buffer in this special window position
     - close and save an existing stack
     - open all windows of that stack
   - moving in the stack buffer will sync the buffers in the stack
   - adding anything to the stack will add the link into the stack buffer (in tail position)
   - selection of a buffer in the stack will center the stack buffer to that link position
** TODO provide a window setup that shows the org-roam-buffer(-toggle) below the notdeft window
